<%- include ('Layout/header') %>

    <body>
        <br>
        <div class="container" style="margin: 0 auto; width:60% ">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="form-group col-md-5">
                            <label style="color: #805b23 !important;"><b>Browse for Motion Resume</b></label><br />
                            <input type="file" id="motionresume" class="motionresume" name="motionresume"
                                accept="video/mp4,video/x-m4v,video/" /><br />
                        </div>
                    </div>
                    <hr>
                    <p style="color: #805b23 !important;"><b>Record Motion Resume</b></p>
                    <div class="row">
                        <div class="buttonStart col-sm-3">
                            <span id="startButton" style="background-color: #e6e1da !important;"
                                class="btn btn-md btn-light">Start <i class="fa fa-video-camera"></i>
                            </span>
                        </div>
                        <!-- <div style="clear: both;"></div> -->
                        <br>
                        <div class="col-sm-3 buttonStopDiv" style="display: none;">
                            <span id="stopButton" style="background-color: #e6e1da !important;"
                                class="btn btn-md btn-light">Stop <i class="fa fa-stop" aria-hidden="true"></i>
                            </span>
                        </div>

                    </div>
                    <br>
                    <div class="row" id="previewDiv" style="display: none;">
                        <video id="preview" width="460" height="320" autoplay muted></video>
                    </div>
                    <div class="recordingDiv" style="display: none;">
                        <h2>Video</h2>
                        <video id="recording" width="460" height="320" controls></video>
                    </div>
                    <br>
                    <div class="row">
                        <div class="form-group col-md-5">
                            <button class="btn btn-md save_motionresume"
                                style="display: none; background-color: #e6e1da !important;" id="save_motionresume">
                                Save <i class="fa fa-save "></i></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="log"></div>
        <script>
            $(document).ready(function () {

                $(".buttonStart").click(function () {
                    $(".buttonStopDiv").show()
                    $("#previewDiv").show()
                    $(".recordingDiv").hide()
                    $(".save_motionresume").hide()
                })

                $(".buttonStop").click(function () {
                    $(".buttonStopDiv").hide()
                    document.getElementById("previewDiv").style.display = "none"
                    $(".recordingDiv").show()
                    $(".save_motionresume").show()
                })

                var motionresume = ""
                let logElement = document.getElementById("log");
                let recordingTimeMS = 5000;
                function log(msg) {
                    logElement.innerHTML += msg + "\n";
                }
                function wait(delayInMS) {
                    return new Promise((resolve) => setTimeout(resolve, delayInMS));
                }



                let preview = document.getElementById("preview");
                let recording = document.getElementById("recording");
                let startButton = document.getElementById("startButton");
                let stopButton = document.getElementById("stopButton");
                let downloadButton = document.getElementById("downloadButton");

                function startRecording(stream, lengthInMS) {
                    let recorder = new MediaRecorder(stream);
                    let data = [];

                    recorder.ondataavailable = (event) => data.push(event.data);
                    recorder.start();
                    log(recorder.state + " for " + lengthInMS / 1000 + " seconds...");

                    let stopped = new Promise((resolve, reject) => {
                        recorder.onstop = resolve;
                        recorder.onerror = (event) => reject(event.name);
                    });

                    let recorded = wait(lengthInMS).then(
                        () => recorder.state == "recording" && recorder.stop()
                    );

                    return Promise.all([stopped, recorded]).then(() => data);
                }

                function stop(stream) {
                    stream.getTracks().forEach((track) => track.stop());
                }

                startButton.addEventListener(
                    "click",
                    function () {
                        navigator.mediaDevices
                            .getUserMedia({
                                video: true,
                                audio: true,
                            })
                            .then((stream) => {
                                preview.srcObject = stream;
                                // downloadButton.href = stream;
                                preview.captureStream =
                                    preview.captureStream || preview.mozCaptureStream;
                                return new Promise((resolve) => (preview.onplaying = resolve));
                            })
                            .then(() =>
                                startRecording(preview.captureStream(), recordingTimeMS)
                            )
                            .then((recordedChunks) => {

                                $(".save_motionresume").show()
                                let recordedBlob = new Blob(recordedChunks, {
                                    type: "video/webm",
                                });
                                recording.src = URL.createObjectURL(recordedBlob);
                                // downloadButton.href = recording.src;
                                // downloadButton.download = "RecordedVideo.webm";
                                var reader = new FileReader();
                                reader.readAsDataURL(recordedBlob);
                                return new Promise(resolve => {
                                    reader.onloadend = function () {
                                        var base64data = reader.result;
                                        resolve(base64data)
                                    }

                                }).then(res => {
                                    motionresume = res
                                })

                            })
                            .catch(log);
                    },
                    false
                );

                stopButton.addEventListener(
                    "click",
                    function () {
                        stop(preview.srcObject);
                        $(".save_motionresume").show()
                    },
                    false
                );



                $(".motionresume").change(function (e) {
                    e.preventDefault(e);
                    var dummyVideo = document.createElement('video');
                    var videoDurationLimit = 180
                    var file = event.srcElement.files[0];

                    var reader = new FileReader();
                    reader.readAsBinaryString(file);

                    reader.onload = function () {
                        var browsedStream = btoa(reader.result)
                        motionresume = browsedStream
                    };
                    reader.onerror = function () {
                        console.log('there are some problems');
                    };

                    var fileURL = URL.createObjectURL(this.files[0]);
                    dummyVideo.src = fileURL;
                    dummyVideo.ondurationchange = function () {

                        if (parseInt(this.duration) > videoDurationLimit) {
                            motionresume = ""
                            alert("Video too long, maximum length is 3 minutes.")
                            document.getElementById("motionresume").value = null;
                        } else {
                            $(".save_motionresume").show()
                        }
                    };
                })

                $(".save_motionresume").click(function (e) {
                    e.preventDefault(e);

                    $.ajax({
                        method: "POST",
                        url: "/save_motionresume",
                        data: { motionresume: motionresume },
                        success: function (data) {
                            // success callback function
                            alert("Success, check logs");
                            // window.location.reload(true);
                            console.log(data)
                        },
                        error: function (data, status, xhr) {
                            // error callback function
                            alert("Error, check logs");
                            console.log(data)
                        },
                    });
                })
            })

        </script>
    </body>
    <%- include ('Layout/footer') %>