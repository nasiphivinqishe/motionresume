

//aws systanx(aws lambda function is just an ordinary router)
exports.someFunctioName = (event, context, callback) {
event.name
req.name
}




//google cloud function systanx(google function is just an ordinary router)
exports.someFunctioName = https.functions(req, res) {
      var dataFromPost =  req.body
}

#########################MongoDB#######################

db.collectionName.drop()    //To delete collection

app.get('/motion_resume',(req,res,next) =>{
  //Here fetch data using mongoose query like
  job.find({}, function(err, jobs) {
  if (err) throw err;
  // object of all the jobs
  res.render('motion_resume',{jobs:jobs});
});


router.get("/motion_resume", (req, res) => {
  job.find({}, function(err, jobs) {
    if (err) {
      res.send(err);
    } else {
      res.send(jobs);
    }
  });
});


<ul class="jobs">
    <% for (var i = 0; i < jobs.length; i++) { %>
    <li>
      <div class="timeline-time">
        <span class="date" style="text-align: left"> <%= jobs[i].level%> </span>
        </div>
        <div>
          <span class="date" style="text-align: left">
           <%= jobs[i].field:%>
         </span>
        </div>
        <div>
          <span class="date" style="text-align: left">
            <%= jobs[i].skills%>
          </span>
        </div>
        <div>
          <span class="date" style="text-align: left">
            <%= jobs[i].requirements%>
          </span>
        </div>
        <div>
          <span class="date" style="text-align: left">
            <%= jobs[i].functions%>
          </span>
        </div>
        <div>
          <span class="date" style="text-align: left"> <%= jobs[i]._id%> </span>
        </div>
        <div>
          <span class="date" style="text-align: left">
            <%= jobs[i].start_date%>
          </span>
        </div>
        <div>
          <span class="date" style="text-align: left">
            <%= jobs[i].application_closing_date%>
          </span>
      </div>
    </li>
    <% } %>
  </ul>

<div class="row">
  <div class="col-sm-12">
    <button class="btn btn-md btn-primary view_applicants" id="view_applicants">Applicants</button>
  </div>
</div>


// 19/ 05/ 2021

1.1 Hide and show view applicants button(depending if person who posted it is one logged in)
1.2 Display Applicants for specific Job


2. Make Nice Navbar(https://materializecss.com/navbar.html# this link has nice navbars)


3. Go Back and Make Nice Login(bootstrap and font-awesome where needed)

4. Nice Registration

5. Make Nice loader and notifier(alert)


6. Host you App

Post on LinkedIn on its current status and your plans,

Plans would be:-

Creating email verification and enforce user to first verify before login(enhance security)
Working with files(for Motion resume upload, the profile picture upload)
Creating a Module and Server to Manage Real-time Notifications(Socket.io or NATS.io still to decide)
Tagging a person on Job Post

##########################1########################
var poster = jobs.poster;
var userId = req.session.userId
<% if(poster===userId) { %>

  return (
    <div class="row">
         <div class="col-sm-12">
          <button class="btn btn-md btn-primary view_applicants" id="view_applicants">Applicants</button>
        </div>
</div>
  )

else
    return null;
<% } %>


      <input type="radio" id="write" name="field_type[]" /><label for="write">Write</label><br /><input type="radio" id="record" name="field_type[]" /><label for="record">Record</label><br />








    <nav class="nav-extended">
      <div class="nav-wrapper">
        <a href="/motion_resume" class="brand-logo">Motion Resume</a>
          <li><a href="/connect_to_people">Connect To People</a></li>
          <li><a href="/available_jobs">Available Jobs</a></li>
          <li><a href="/messages">Messages</a></li>
          <li><a href="/my_profile">My Profile</a></li>
          <li><a href="/add_job">Add Job</a></li>
        </ul>
      </div>
    </nav>







    router.post("/update", (req, res) => {
  //Ubpdating job of specific Id
  var jobId = jobDetails.jobId;

  console.log(jobId);

  // Job.findByIdAndUpdate(
  //   jobId
  //   // {
  //   levelType: req.body.level,
  //   field: req.body.field,
  //   skills: req.body.skills,
  //   start_date: req.body.start_date,
  //   application_closing_date: req.body.application_closing_date,
  //   requirements: req.body.requirements,
  //   functions: req.body.functions,
  // },
  //   function (err, results) {
  //     if (err) {
  //       console.log("Error", error);
  //       s;
  //       res.send("Error ");
  //     } else {
  //       res.render("job_details");
  //     }
  //     console.log(results);
  //   }
  //);
});  

 levelType
 field
 skills
 start_date
 application_closing_date
 requirements
  functions


var applicants = jobDetails.applicants
var users = req.querry.users
var newCreatedApplicants=[]

   for(var a=0; a<applicants.length; a++){
     if(users._id == applicant.user_id) {
       { $push: { newCreatedApplicants } } //storing users on newCreatedApplicants 
     }
  }



  <%= JSON.stringify(jobDetails.applicants) %>


  


  #############################Fixing Job Details#############################
  <div class="container">
  <div class="card" style="width: 18rem;">
  <img src="..." class="card-img-top" alt="...">
  <div class="card-body">
      <form id="update_job">
     <div class="row">
      <%=jobDetails.level %>
        <div class="form-group col-md-5">
         <label for="level">Level Type:</label>
         <select
            class="form-control"
            id="level"
            name="level"
            value="<%=jobDetails.level %>"
            required
        >
          <option disabled>select here.</option>
          <option value="1">Entry (0 yrs of Exp)</option>
          <option value="2">Junior (0-2 yrs of Exp)</option>
          <option value="3">Intermediate (3-5 yrs of Exp)</option>
          <option value="4">Senior (6+ yrs of Exp)</option>
        </select>
      </div>
    </div>

    <div class="row">
      <div class="form-group col-md-5">
        <label for="field">Field/ Industry:</label>
        <input
          class="form-control"
          type="text"
          id="field"
          name="field"
          value="<%= jobDetails.field %>"
          placeholder="Enter field/ Industry"
          required
        />
      </div>
    </div>

    <div class="row">
      <div class="form-group col-md-5">
        <label for="skills">Skills Needed:</label>
        <input
          class="form-control"
          type="text"
          id="skills"
          name="skills"
          value="<%= jobDetails.skills %>"
          placeholder="Enter Skills needed"
          required
        />
      </div>
    </div>

    <div class="row">
      <div class="form-group col-md-5">
        <label for="start_date">Experted Start Date:</label>
        <input
          class="form-control"
          type="date"
          id="start_date"
          name="start_date"
          placeholder="Enter Expected Start date"
          required
        />
      </div>
    </div>
    <div class="row">
      <div class="form-group col-md-5">
        <label for="application_closing_date">Application Closing Date:</label>
        <input
          class="form-control"
          type="date"
          id="application_closing_date"
          name="application_closing_date"
          placeholder="Enter closing date for this job"
          required
        />
      </div>
    </div>

    <div class="row">
      <div class="form-group col-md-5 col-md-5">
        <label for="requirements">Job Requirements:</label>
        <textarea
          class="form-control"
          rows="5"
          id="requirements"
          name="requirements"
          placeholder="Enter Job Requirements"
          required
        >
        </textarea>
        <script>
          CKEDITOR.replace("requirements");
        </script>
      </div>
    </div>

    <div class="row">
      <div class="form-group col-md-5 col-md-5">
        <label for="functions">Job Discription and Responsibilitie:</label>
        <textarea
          class="form-control"
          rows="5"
          id="functions"
          name="functions"
          value="<%= jobDetails.field %>"
          placeholder="Enter Job Functions"
          required
        >
        </textarea>
        <script>
          CKEDITOR.replace("functions");
        </script>
      </div>
    </div>
    <button
      class="btn btn-md btn-primary save_updated_job"
      id="save_updated_job"
    >
      Save Updated Job
    </button>
  </form>
  </div>
</div>

<div class="card" style="width: 18rem;">
  <img src="..." class="card-img-top" alt="...">
  <div class="card-body">
 <h3><b>Hello, Please add interview questions</b></h3>
  <% if(jobDetails.interview && jobDetails.interview.questions) { %> <% for(var
  a = 0; a < jobDetails.interview.questions.length; a++) { %>
  <div>
    <input name="the_types[]" type="checkbox" <%=
    jobDetails.interview.questions[a].isVideo == 'true' ? "checked" : "" %>
    /><input
      type="text"
      name="field_name[]"
      value="<%= jobDetails.interview.questions[a].question %>"
    />
    <a href="javascript:void(0);" class="remove_button">Remove</a>
  </div>
  <% } %> <% } %>

  <div class="field_wrapper">
    <div>
      <a href="javascript:void(0);" class="add_button" title="Add field">Add</a>
    </div>
  </div>
  <button class="btn btn-md btn-primary submit_questions" id="submit_questions">
    Submit questions
  </button>
  </div>
</div>

<div class="card" style="width: 18rem;">
  <img src="..." class="card-img-top" alt="...">
  <div class="card-body">
  <div class="row my-4">
    <div class="col-lg-12">
      <h3><b>People Applied for this job</b></h3>
      <%= JSON.stringify(jobDetails.applicants) %>
      <button class="btn btn-md btn-primary send_interview" id="send_interview">
        Send Interview
      </button>
    </div>
  </div>
  </div>
</div>

</div>

#########################Generate random link###########################3

    <script>
      var links = ["google.com", "youtube.com", "reddit.com", "apple.com"];

      function openSite() {
        // get a random number between 0 and the number of links
        var randIdx = Math.random() * links.length;
        // round it, so it can be used as array index
        randIdx = parseInt(randIdx, 10);
        // construct the link to be opened
        var link = "http://" + links[randIdx];
        return link;
      }

      document.getElementById("link").innerHTML = openSite();
    </script>

 db.users.find().pretty()


 User.findById({email : 'fezekileplaatyi@myplusplus.com'}, function (err, jobDetails) {
      if(err) {
          console.log("Error in deleting user")
      }
      else{
        console.log("Successfully deleted uuser")
      }

        <%= applicants_for_this_job %>
            <% for(var i=0; i < ; i++) { %>
 <p id=" jobDetails.applicants[a].userId" cl><?/p>
            <% } %>
